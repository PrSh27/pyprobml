An error occurred while executing the following cell:
------------------

# feature importance using random forests  on ,mnist
# Based on https://github.com/ageron/handson-ml2/blob/master/06_decision_trees.ipynb

import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl

try:
    from sklearn.datasets import fetch_openml
except:
    %pip install scikit-learn
    from sklearn.datasets import fetch_openml
from sklearn.ensemble import RandomForestClassifier

mnist = fetch_openml('mnist_784', version=1)
mnist.target = mnist.target.astype(np.uint8)
X= mnist["data"]
y = mnist["target"]

def plot_digit(data):
    image = data.reshape(28, 28)
    plt.figure()
    plt.imshow(image, cmap = mpl.cm.hot,
               interpolation="nearest")
    plt.axis("off")
    

    
rnd_clf = RandomForestClassifier(n_estimators=100, random_state=42)
ndxA = np.where(y==0)[0]
ndxB = np.where(y==8)[0]
ndx = np.concatenate((ndxA, ndxB))
Xc = X[ndx,:]
yc = y[ndx]
rnd_clf.fit(Xc, yc)

plot_digit(rnd_clf.feature_importances_)
cbar = plt.colorbar(ticks=[rnd_clf.feature_importances_.min(), rnd_clf.feature_importances_.max()])
cbar.ax.set_yticklabels(['Not important', 'Very important'])
plt.savefig("figures/rf_feature_importance_mnist.pdf", dpi=300)
#plt.savefig("figures/rf_feature_importance_mnist_class{}.pdf".format(c), dpi=300)
plt.show()

------------------

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
File /usr/local/lib/python3.9/dist-packages/pandas/core/indexes/base.py:3621, in Index.get_loc(self, key, method, tolerance)
   3620 try:
-> 3621     return self._engine.get_loc(casted_key)
   3622 except KeyError as err:

File /usr/local/lib/python3.9/dist-packages/pandas/_libs/index.pyx:136, in pandas._libs.index.IndexEngine.get_loc()

File /usr/local/lib/python3.9/dist-packages/pandas/_libs/index.pyx:142, in pandas._libs.index.IndexEngine.get_loc()

TypeError: '(array([    1,    21,    34, ..., 69959, 69967, 69991]), slice(None, None, None))' is an invalid key

During handling of the above exception, another exception occurred:

InvalidIndexError                         Traceback (most recent call last)
Input In [1], in <cell line: 33>()
     31 ndxB = np.where(y==8)[0]
     32 ndx = np.concatenate((ndxA, ndxB))
---> 33 Xc = X[ndx,:]
     34 yc = y[ndx]
     35 rnd_clf.fit(Xc, yc)

File /usr/local/lib/python3.9/dist-packages/pandas/core/frame.py:3505, in DataFrame.__getitem__(self, key)
   3503 if self.columns.nlevels > 1:
   3504     return self._getitem_multilevel(key)
-> 3505 indexer = self.columns.get_loc(key)
   3506 if is_integer(indexer):
   3507     indexer = [indexer]

File /usr/local/lib/python3.9/dist-packages/pandas/core/indexes/base.py:3628, in Index.get_loc(self, key, method, tolerance)
   3623         raise KeyError(key) from err
   3624     except TypeError:
   3625         # If we have a listlike key, _check_indexing_error will raise
   3626         #  InvalidIndexError. Otherwise we fall through and re-raise
   3627         #  the TypeError.
-> 3628         self._check_indexing_error(key)
   3629         raise
   3631 # GH#42269

File /usr/local/lib/python3.9/dist-packages/pandas/core/indexes/base.py:5637, in Index._check_indexing_error(self, key)
   5633 def _check_indexing_error(self, key):
   5634     if not is_scalar(key):
   5635         # if key is not a scalar, directly raise an error (the code below
   5636         # would convert to numpy arrays and raise later any way) - GH29926
-> 5637         raise InvalidIndexError(key)

InvalidIndexError: (array([    1,    21,    34, ..., 69959, 69967, 69991]), slice(None, None, None))
InvalidIndexError: (array([    1,    21,    34, ..., 69959, 69967, 69991]), slice(None, None, None))
